<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech-Deep-Dive on Gopi Palaniappan</title>
    <link>https://gopipm.github.io/categories/tech-deep-dive/</link>
    <description>Recent content in Tech-Deep-Dive on Gopi Palaniappan</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://gopipm.github.io/categories/tech-deep-dive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Developer&#39;s Guide to the Exploding World of Gen AI Code Generators</title>
      <link>https://gopipm.github.io/blog/a-developers-guide-to-gen-ai-code-generators/</link>
      <pubDate>Sat, 02 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://gopipm.github.io/blog/a-developers-guide-to-gen-ai-code-generators/</guid>
      <description>&lt;h2 id=&#34;navigating-the-ai-coding-revolution&#34;&gt;Navigating the AI Coding Revolution&lt;/h2&gt; &lt;p&gt;Every week, it seems a new AI-powered coding tool enters the scene, promising to revolutionize our development workflows. As a developer constantly looking to optimize my process, I&amp;rsquo;ve been diving headfirst into this rapidly evolving ecosystem. From IDE extensions to standalone CLIs, the options are vast and varied.&lt;/p&gt;&#xA;&lt;p&gt;This post is my attempt to catalog and compare the various tools I&amp;rsquo;ve experimented with recently. Many of these tools act as sophisticated frontends, connecting to powerful large language models (LLMs) like those from OpenAI, Google, or Anthropic, while others offer a more integrated, unique experience.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Attempting to Clone a Genetic Algorithm Car Simulation: A Tale of Python, AI, and JavaScript</title>
      <link>https://gopipm.github.io/blog/converting-python-car-sim-to-html-js/</link>
      <pubDate>Sat, 02 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://gopipm.github.io/blog/converting-python-car-sim-to-html-js/</guid>
      <description>&lt;h2 id=&#34;the-ambitious-goal-from-python-to-the-browser&#34;&gt;The Ambitious Goal: From Python to the Browser&lt;/h2&gt; &lt;p&gt;As a fun side project, I recently became fascinated with a car simulation that used a genetic algorithm to teach virtual cars how to navigate a track. The original implementation, which you can find on &lt;a href=&#34;https://github.com/giaco91/Car-Race---An-evolutionary-Game.git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; , was written in Python, and I thought it would be a fantastic challenge to clone it for the web using HTML, JavaScript, and CSS. My plan was to leverage AI coding assistants to help with the heavy lifting of translating the Python logic into a functional browser-based experience.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating My Blog: Using Gemini to Generate Hugo Posts</title>
      <link>https://gopipm.github.io/blog/hugo-blog-post-creator-gems/</link>
      <pubDate>Sat, 02 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://gopipm.github.io/blog/hugo-blog-post-creator-gems/</guid>
      <description>&lt;h2 id=&#34;the-quest-for-an-automated-ghost-writer&#34;&gt;The Quest for an Automated Ghost Writer&lt;/h2&gt; &lt;p&gt;As a Technical Program Manager at Google with a deep passion for technology that stretches back to my first ZX Spectrum, I&amp;rsquo;m always looking for ways to blend my professional skills with my personal projects. My latest endeavor? Automating my Hugo-based blog. The ultimate goal is to create a fully autonomous &amp;ldquo;ghost writer&amp;rdquo; that can generate and publish content regularly. The first major step in this journey has been successfully setting up a workflow using Gemini to generate complete, formatted blog posts, just like this one!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
